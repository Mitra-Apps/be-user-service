syntax = "proto3";

package proto;

option go_package = "github.com/Mitra-Apps/be-user-service/domain/proto/user;user";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/any.proto";

message User {
    string id = 1;
    string username = 2;
    string password = 3;
    string email = 4;
    string phone_number = 5;
    string avatar_image_id = 6;
    string access_token = 7;
    bool is_active = 8;
    string name = 9;
    string address = 10;
}

message Role {
    string id = 1;
    string role_name = 2;
    string description = 3;
    bool is_active = 4;
    string permission = 5;
}

message UserLoginRequest {
    string username = 1;
    string password = 2;
}

message UserLoginResponse{
    User user = 1;
}

message UserRegisterRequest {
    string email = 1 [(validate.rules).string.email = true];
    string password = 2 [(validate.rules).string = {min_len: 6}];
    string name = 3 [(validate.rules).string = {min_len: 1, max_len: 255}]; 
    string phone_number = 4 [(validate.rules).string = {min_len: 1, max_len: 255}];
    string address = 5 [(validate.rules).string = {min_len: 1, max_len: 255}];
    repeated string role_id = 6;
}

message SuccessResponse {
    google.protobuf.Any data = 1;
}

message GetUsersRequest {}

message GetUsersResponse {
    repeated User users = 1;
}

service UserService {
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
        option (google.api.http) = {
            get: "/api/v1/users"
        };
    }
    rpc Login(UserLoginRequest) returns (UserLoginResponse) {
        option (google.api.http) = {
            post: "/users/login"
        };
    }
    rpc Register(UserRegisterRequest) returns (SuccessResponse) {
        option (google.api.http) = {
            post: "/api/v1/users/register"
        };
    }
    rpc CreateRole(Role) returns (SuccessResponse) {
        option (google.api.http) = {
            post: "/api/v1/users/createrole"
        };
    }
}