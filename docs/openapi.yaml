# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: UserService API
    version: 0.0.1
paths:
    /users:
        get:
            tags:
                - UserService
            operationId: UserService_GetUsers
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/createrole:
        post:
            tags:
                - UserService
            operationId: UserService_CreateRole
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: roleName
                  in: query
                  schema:
                    type: string
                - name: description
                  in: query
                  schema:
                    type: string
                - name: isActive
                  in: query
                  schema:
                    type: boolean
                - name: permission
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessMessage'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/login:
        post:
            tags:
                - UserService
            operationId: UserService_Login
            parameters:
                - name: username
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserLoginResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/register:
        post:
            tags:
                - UserService
            operationId: UserService_Register
            parameters:
                - name: email
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: phoneNumber
                  in: query
                  schema:
                    type: string
                - name: address
                  in: query
                  schema:
                    type: string
                - name: roleId
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessMessage'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        GetUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SuccessMessage:
            type: object
            properties:
                message:
                    type: string
        User:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                password:
                    type: string
                email:
                    type: string
                phoneNumber:
                    type: string
                avatarImageId:
                    type: string
                accessToken:
                    type: string
                isActive:
                    type: boolean
                name:
                    type: string
                address:
                    type: string
        UserLoginResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
tags:
    - name: UserService
